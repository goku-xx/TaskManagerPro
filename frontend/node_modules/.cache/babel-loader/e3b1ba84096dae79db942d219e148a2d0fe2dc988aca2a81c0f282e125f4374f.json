{"ast":null,"code":"var _jsxFileName = \"D:\\\\TaskManagerPro\\\\frontend\\\\src\\\\components\\\\KanbanBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useCallback } from 'react';\nimport API from '../api';\nimport { AuthContext } from '../context/AuthContext';\nimport TaskCard from './TaskCard';\nimport TaskForm from './TaskForm';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { Container, Grid, Paper, Typography, Button, Modal, Box, CircularProgress, Alert } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 2\n};\nconst columnsFromBackend = {\n  todo: {\n    name: 'To Do',\n    items: []\n  },\n  inprogress: {\n    name: 'In Progress',\n    items: []\n  },\n  done: {\n    name: 'Done',\n    items: []\n  }\n};\nfunction KanbanBoard() {\n  _s();\n  const [columns, setColumns] = useState(columnsFromBackend);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [openModal, setOpenModal] = useState(false);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const {\n    user,\n    isAuthenticated\n  } = useContext(AuthContext);\n\n  // Debug: Log user object to see its structure\n  useEffect(() => {\n    console.log('User object:', user);\n    console.log('Is authenticated:', isAuthenticated);\n    console.log('Token exists:', !!localStorage.getItem('token'));\n  }, [user, isAuthenticated]);\n  const fetchTasks = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await API.get('/tasks');\n      const newColumns = {\n        ...columnsFromBackend\n      };\n      res.data.forEach(task => {\n        const col = newColumns[task.status] || newColumns['todo'];\n        col.items.push(task);\n      });\n      setColumns(newColumns);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Could not load tasks. Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    if (user && isAuthenticated) {\n      fetchTasks();\n    }\n  }, [user, isAuthenticated, fetchTasks]);\n  const handleOpenModal = (task = null) => {\n    setTaskToEdit(task);\n    setOpenModal(true);\n  };\n  const handleCloseModal = () => {\n    setOpenModal(false);\n    setTaskToEdit(null);\n  };\n  const handleSubmitTask = async taskData => {\n    setError(null);\n    console.log('handleSubmitTask called with:', taskData);\n    console.log('Current user:', user);\n    console.log('Is authenticated:', isAuthenticated);\n\n    // Check if user is authenticated\n    if (!isAuthenticated || !user) {\n      setError(\"User not authenticated. Please log in.\");\n      return;\n    }\n    try {\n      if (taskData._id) {\n        // Update existing task\n        const updatedPayload = {\n          ...taskToEdit,\n          title: taskData.title,\n          description: taskData.description,\n          status: taskData.status\n        };\n        const {\n          _id,\n          ...data\n        } = updatedPayload;\n        console.log('Updating task:', _id, 'with data:', data);\n        await API.put(`/tasks/${_id}`, data);\n      } else {\n        // Create new task\n        const userId = user.id;\n        console.log('User ID for new task:', userId);\n        if (!userId) {\n          console.error('User ID not found in user object:', user);\n          setError(\"Project ID is required to create a task. User ID not found.\");\n          return;\n        }\n        const newTask = {\n          title: taskData.title,\n          description: taskData.description,\n          status: taskData.status || 'todo',\n          projectId: userId // Using user.id from AuthContext\n        };\n        console.log('Creating task with data:', newTask);\n        const response = await API.post('/tasks', newTask);\n        console.log('Task creation response:', response.data);\n      }\n      fetchTasks();\n      handleCloseModal();\n    } catch (err) {\n      var _err$response2, _err$response3, _err$response3$data;\n      console.error('Task submission error:', err);\n      console.error('Error response:', (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data);\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Could not save task. Please try again.\");\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\n    try {\n      await API.delete(`/tasks/${taskId}`);\n      fetchTasks();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Could not delete task.\");\n    }\n  };\n  const onDragEnd = async result => {\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination || source.droppableId === destination.droppableId && source.index === destination.index) return;\n    const taskToMove = columns[source.droppableId].items.find(task => task._id === draggableId);\n    if (!taskToMove) return;\n    const sourceItems = [...columns[source.droppableId].items];\n    const destItems = source.droppableId === destination.droppableId ? sourceItems : [...columns[destination.droppableId].items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...columns[source.droppableId],\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...columns[destination.droppableId],\n        items: destItems\n      }\n    });\n    try {\n      await API.put(`/tasks/${draggableId}`, {\n        ...taskToMove,\n        status: destination.droppableId\n      });\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || \"Failed to update task. Reverting.\");\n      fetchTasks(); // Rollback on failure\n    }\n  };\n\n  // Show loading while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 4,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show message if not authenticated\n  if (!isAuthenticated || !user) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 4,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        children: \"Please log in to access the Kanban board.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 48\n        }, this),\n        onClick: () => handleOpenModal(),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: Object.entries(columns).map(([columnId, column]) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              p: 2,\n              bgcolor: '#f8f9fa',\n              minHeight: '70vh'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              align: \"center\",\n              gutterBottom: true,\n              children: [column.name, \" (\", column.items.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: columnId,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Box, {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                sx: {\n                  backgroundColor: snapshot.isDraggingOver ? '#dfefff' : 'transparent',\n                  p: 1,\n                  minHeight: '60vh',\n                  borderRadius: 1\n                },\n                children: [column.items.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: task._id,\n                  index: index,\n                  children: provided => /*#__PURE__*/_jsxDEV(Box, {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    sx: {\n                      mb: 2,\n                      ...provided.draggableProps.style\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TaskCard, {\n                      task: task,\n                      onEdit: () => handleOpenModal(task),\n                      onDelete: handleDeleteTask\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 29\n                  }, this)\n                }, task._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, columnId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openModal,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: taskToEdit ? 'Edit Task' : 'Add New Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          onSubmit: handleSubmitTask,\n          taskToEdit: taskToEdit,\n          onCancel: handleCloseModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"jXKpvVGX+sY0orykPOMCjNG8/7s=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useCallback","API","AuthContext","TaskCard","TaskForm","DragDropContext","Droppable","Draggable","Container","Grid","Paper","Typography","Button","Modal","Box","CircularProgress","Alert","AddIcon","jsxDEV","_jsxDEV","modalStyle","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","columnsFromBackend","todo","name","items","inprogress","done","KanbanBoard","_s","columns","setColumns","loading","setLoading","error","setError","openModal","setOpenModal","taskToEdit","setTaskToEdit","user","isAuthenticated","console","log","localStorage","getItem","fetchTasks","res","get","newColumns","data","forEach","task","col","status","push","err","_err$response","_err$response$data","response","message","handleOpenModal","handleCloseModal","handleSubmitTask","taskData","_id","updatedPayload","title","description","put","userId","id","newTask","projectId","post","_err$response2","_err$response3","_err$response3$data","handleDeleteTask","taskId","window","confirm","delete","_err$response4","_err$response4$data","onDragEnd","result","source","destination","draggableId","droppableId","index","taskToMove","find","sourceItems","destItems","removed","splice","_err$response5","_err$response5$data","sx","py","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","display","justifyContent","mb","variant","startIcon","onClick","container","spacing","Object","entries","map","columnId","column","item","xs","md","elevation","minHeight","align","gutterBottom","length","provided","snapshot","ref","innerRef","droppableProps","backgroundColor","isDraggingOver","draggableProps","dragHandleProps","style","onEdit","onDelete","placeholder","open","onClose","onSubmit","onCancel","_c","$RefreshReg$"],"sources":["D:/TaskManagerPro/frontend/src/components/KanbanBoard.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useCallback } from 'react';\r\nimport API from '../api';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport TaskCard from './TaskCard';\r\nimport TaskForm from './TaskForm';\r\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\r\nimport {\r\n  Container, Grid, Paper, Typography, Button, Modal,\r\n  Box, CircularProgress, Alert\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst modalStyle = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius: 2,\r\n};\r\n\r\nconst columnsFromBackend = {\r\n  todo: { name: 'To Do', items: [] },\r\n  inprogress: { name: 'In Progress', items: [] },\r\n  done: { name: 'Done', items: [] },\r\n};\r\n\r\nfunction KanbanBoard() {\r\n  const [columns, setColumns] = useState(columnsFromBackend);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [taskToEdit, setTaskToEdit] = useState(null);\r\n  const { user, isAuthenticated } = useContext(AuthContext);\r\n\r\n  // Debug: Log user object to see its structure\r\n  useEffect(() => {\r\n    console.log('User object:', user);\r\n    console.log('Is authenticated:', isAuthenticated);\r\n    console.log('Token exists:', !!localStorage.getItem('token'));\r\n  }, [user, isAuthenticated]);\r\n\r\n  const fetchTasks = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const res = await API.get('/tasks');\r\n      const newColumns = { ...columnsFromBackend };\r\n      res.data.forEach(task => {\r\n        const col = newColumns[task.status] || newColumns['todo'];\r\n        col.items.push(task);\r\n      });\r\n      setColumns(newColumns);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Could not load tasks. Please try again later.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user && isAuthenticated) {\r\n      fetchTasks();\r\n    }\r\n  }, [user, isAuthenticated, fetchTasks]);\r\n\r\n  const handleOpenModal = (task = null) => {\r\n    setTaskToEdit(task);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setTaskToEdit(null);\r\n  };\r\n\r\n  const handleSubmitTask = async (taskData) => {\r\n    setError(null);\r\n    \r\n    console.log('handleSubmitTask called with:', taskData);\r\n    console.log('Current user:', user);\r\n    console.log('Is authenticated:', isAuthenticated);\r\n    \r\n    // Check if user is authenticated\r\n    if (!isAuthenticated || !user) {\r\n      setError(\"User not authenticated. Please log in.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (taskData._id) {\r\n        // Update existing task\r\n        const updatedPayload = {\r\n          ...taskToEdit,\r\n          title: taskData.title,\r\n          description: taskData.description,\r\n          status: taskData.status,\r\n        };\r\n        const { _id, ...data } = updatedPayload;\r\n        console.log('Updating task:', _id, 'with data:', data);\r\n        await API.put(`/tasks/${_id}`, data);\r\n      } else {\r\n        // Create new task\r\n        const userId = user.id;\r\n        console.log('User ID for new task:', userId);\r\n        \r\n        if (!userId) {\r\n          console.error('User ID not found in user object:', user);\r\n          setError(\"Project ID is required to create a task. User ID not found.\");\r\n          return;\r\n        }\r\n\r\n        const newTask = {\r\n          title: taskData.title,\r\n          description: taskData.description,\r\n          status: taskData.status || 'todo',\r\n          projectId: userId, // Using user.id from AuthContext\r\n        };\r\n        \r\n        console.log('Creating task with data:', newTask);\r\n        const response = await API.post('/tasks', newTask);\r\n        console.log('Task creation response:', response.data);\r\n      }\r\n      \r\n      fetchTasks();\r\n      handleCloseModal();\r\n    } catch (err) {\r\n      console.error('Task submission error:', err);\r\n      console.error('Error response:', err.response?.data);\r\n      setError(err.response?.data?.message || \"Could not save task. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this task?\")) return;\r\n    try {\r\n      await API.delete(`/tasks/${taskId}`);\r\n      fetchTasks();\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Could not delete task.\");\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    const { source, destination, draggableId } = result;\r\n    if (!destination || (source.droppableId === destination.droppableId && source.index === destination.index)) return;\r\n\r\n    const taskToMove = columns[source.droppableId].items.find(task => task._id === draggableId);\r\n    if (!taskToMove) return;\r\n\r\n    const sourceItems = [...columns[source.droppableId].items];\r\n    const destItems = source.droppableId === destination.droppableId\r\n      ? sourceItems\r\n      : [...columns[destination.droppableId].items];\r\n\r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n    destItems.splice(destination.index, 0, removed);\r\n\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: { ...columns[source.droppableId], items: sourceItems },\r\n      [destination.droppableId]: { ...columns[destination.droppableId], items: destItems },\r\n    });\r\n\r\n    try {\r\n      await API.put(`/tasks/${draggableId}`, { ...taskToMove, status: destination.droppableId });\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to update task. Reverting.\");\r\n      fetchTasks(); // Rollback on failure\r\n    }\r\n  };\r\n\r\n  // Show loading while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <Container sx={{ py: 4, textAlign: 'center' }}>\r\n        <CircularProgress />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // Show message if not authenticated\r\n  if (!isAuthenticated || !user) {\r\n    return (\r\n      <Container sx={{ py: 4, textAlign: 'center' }}>\r\n        <Alert severity=\"warning\">\r\n          Please log in to access the Kanban board.\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container sx={{ py: 4 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\r\n        <Typography variant=\"h4\">Kanban Board</Typography>\r\n        <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => handleOpenModal()}>\r\n          Add Task\r\n        </Button>\r\n      </Box>\r\n\r\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Grid container spacing={3}>\r\n          {Object.entries(columns).map(([columnId, column]) => (\r\n            <Grid item xs={12} md={4} key={columnId}>\r\n              <Paper elevation={2} sx={{ p: 2, bgcolor: '#f8f9fa', minHeight: '70vh' }}>\r\n                <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                  {column.name} ({column.items.length})\r\n                </Typography>\r\n                <Droppable droppableId={columnId}>\r\n                  {(provided, snapshot) => (\r\n                    <Box\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      sx={{\r\n                        backgroundColor: snapshot.isDraggingOver ? '#dfefff' : 'transparent',\r\n                        p: 1,\r\n                        minHeight: '60vh',\r\n                        borderRadius: 1,\r\n                      }}\r\n                    >\r\n                      {column.items.map((task, index) => (\r\n                        <Draggable key={task._id} draggableId={task._id} index={index}>\r\n                          {(provided) => (\r\n                            <Box\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              sx={{ mb: 2, ...provided.draggableProps.style }}\r\n                            >\r\n                              <TaskCard\r\n                                task={task}\r\n                                onEdit={() => handleOpenModal(task)}\r\n                                onDelete={handleDeleteTask}\r\n                              />\r\n                            </Box>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </Box>\r\n                  )}\r\n                </Droppable>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </DragDropContext>\r\n\r\n      <Modal open={openModal} onClose={handleCloseModal}>\r\n        <Box sx={modalStyle}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {taskToEdit ? 'Edit Task' : 'Add New Task'}\r\n          </Typography>\r\n          <TaskForm\r\n            onSubmit={handleSubmitTask}\r\n            taskToEdit={taskToEdit}\r\n            onCancel={handleCloseModal}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default KanbanBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}