{"ast":null,"code":"var _jsxFileName = \"D:\\\\TaskManagerPro\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport API from '../api';\nimport { jwtDecode } from 'jwt-decode'; // npm install jwt-decode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(() => localStorage.getItem('token'));\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const updateUserFromToken = useCallback(currentToken => {\n    if (currentToken) {\n      try {\n        const decodedUser = jwtDecode(currentToken);\n        const isExpired = decodedUser.exp * 1000 < Date.now();\n        if (isExpired) {\n          throw new Error('Token expired');\n        }\n        setUser({\n          id: decodedUser.id,\n          email: decodedUser.email,\n          role: decodedUser.role\n        });\n        localStorage.setItem('token', currentToken);\n        setToken(currentToken);\n      } catch (e) {\n        console.error('Failed to decode or expired token:', e);\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n      }\n    } else {\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n    }\n  }, []);\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token'); // or session\n      if (token) {\n        setIsAuthenticated(true); // ✅ Set to true\n      } else {\n        setIsAuthenticated(false);\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n\n  // Sync logout across tabs\n  useEffect(() => {\n    const syncLogout = event => {\n      if (event.key === 'token') {\n        const currentToken = localStorage.getItem('token');\n        updateUserFromToken(currentToken);\n      }\n    };\n    window.addEventListener('storage', syncLogout);\n    return () => window.removeEventListener('storage', syncLogout);\n  }, [updateUserFromToken]);\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const res = await API.post('/auth/login', {\n        email,\n        password\n      });\n      updateUserFromToken(res.data.token);\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error('Login failed:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Login failed. Please try again.');\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      setError(null);\n      const res = await API.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      updateUserFromToken(res.data.token);\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n      console.error('Registration failed:', ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Registration failed. Please try again.');\n    }\n  };\n  const logout = () => {\n    updateUserFromToken(null);\n  };\n  const isAuthenticated = !!token && !!user;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      isAuthenticated,\n      login,\n      logout,\n      register,\n      loading,\n      error,\n      setError\n    },\n    children: !loading ? children : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 30\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"doOrLYdE1aGpEGlUKe71yQzl6nc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","API","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","loading","setLoading","error","setError","updateUserFromToken","currentToken","decodedUser","isExpired","exp","Date","now","Error","id","email","role","setItem","e","console","removeItem","checkAuth","setIsAuthenticated","syncLogout","event","key","window","addEventListener","removeEventListener","login","password","res","post","data","err","_err$response","_err$response$data","_err$response2","_err$response2$data","response","message","register","name","_err$response3","_err$response3$data","_err$response4","_err$response4$data","logout","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/TaskManagerPro/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport API from '../api';\r\nimport { jwtDecode } from 'jwt-decode'; // npm install jwt-decode\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(() => localStorage.getItem('token'));\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const updateUserFromToken = useCallback((currentToken) => {\r\n    if (currentToken) {\r\n      try {\r\n        const decodedUser = jwtDecode(currentToken);\r\n        const isExpired = decodedUser.exp * 1000 < Date.now();\r\n\r\n        if (isExpired) {\r\n          throw new Error('Token expired');\r\n        }\r\n\r\n        setUser({\r\n          id: decodedUser.id,\r\n          email: decodedUser.email,\r\n          role: decodedUser.role,\r\n        });\r\n\r\n        localStorage.setItem('token', currentToken);\r\n        setToken(currentToken);\r\n      } catch (e) {\r\n        console.error('Failed to decode or expired token:', e);\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n      }\r\n    } else {\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n      setUser(null);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n  const checkAuth = async () => {\r\n    const token = localStorage.getItem('token'); // or session\r\n    if (token) {\r\n      setIsAuthenticated(true); // ✅ Set to true\r\n    } else {\r\n      setIsAuthenticated(false);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  checkAuth();\r\n}, []);\r\n\r\n  // Sync logout across tabs\r\n  useEffect(() => {\r\n    const syncLogout = (event) => {\r\n      if (event.key === 'token') {\r\n        const currentToken = localStorage.getItem('token');\r\n        updateUserFromToken(currentToken);\r\n      }\r\n    };\r\n    window.addEventListener('storage', syncLogout);\r\n    return () => window.removeEventListener('storage', syncLogout);\r\n  }, [updateUserFromToken]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const res = await API.post('/auth/login', { email, password });\r\n      updateUserFromToken(res.data.token);\r\n    } catch (err) {\r\n      console.error('Login failed:', err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Login failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      setError(null);\r\n      const res = await API.post('/auth/register', { name, email, password });\r\n      updateUserFromToken(res.data.token);\r\n    } catch (err) {\r\n      console.error('Registration failed:', err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Registration failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    updateUserFromToken(null);\r\n  };\r\n\r\n  const isAuthenticated = !!token && !!user;\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token,\r\n        user,\r\n        isAuthenticated,\r\n        login,\r\n        logout,\r\n        register,\r\n        loading,\r\n        error,\r\n        setError,\r\n      }}\r\n    >\r\n      {!loading ? children : <div>Loading...</div>}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}