{"ast":null,"code":"var _jsxFileName = \"D:\\\\TaskManagerPro\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport API from '../api';\nimport { jwtDecode } from 'jwt-decode'; // You might need to install jwt-decode: npm install jwt-decode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const updateUserFromToken = useCallback(currentToken => {\n    if (currentToken) {\n      try {\n        const decodedUser = jwtDecode(currentToken); // Assumes token contains user info like id, role\n        setUser({\n          id: decodedUser.id,\n          email: decodedUser.email,\n          role: decodedUser.role\n        }); // Adjust based on your JWT payload\n        localStorage.setItem('token', currentToken);\n        setToken(currentToken);\n      } catch (e) {\n        console.error(\"Failed to decode token:\", e);\n        localStorage.removeItem('token');\n        setToken(null);\n        setUser(null);\n      }\n    } else {\n      localStorage.removeItem('token');\n      setToken(null);\n      setUser(null);\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    updateUserFromToken(token);\n  }, [token, updateUserFromToken]);\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const res = await API.post('/auth/login', {\n        email,\n        password\n      });\n      updateUserFromToken(res.data.token);\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2, _err$response2$data;\n      console.error(\"Login failed:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Login failed. Please try again.');\n      // Keep token and user null/previous state on error\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      setError(null);\n      const res = await API.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      // Assuming successful registration also returns a token and logs the user in\n      updateUserFromToken(res.data.token);\n    } catch (err) {\n      var _err$response3, _err$response3$data, _err$response4, _err$response4$data;\n      console.error(\"Registration failed:\", ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Registration failed. Please try again.');\n      // Keep token and user null/previous state on error\n    }\n  };\n  const logout = () => {\n    updateUserFromToken(null);\n  };\n  const isAuthenticated = !!token && !!user;\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      user,\n      isAuthenticated,\n      login,\n      logout,\n      register,\n      loading,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"PPi/Vin8d8G+yYPPy/sMLReuAq0=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","API","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","loading","setLoading","error","setError","updateUserFromToken","currentToken","decodedUser","id","email","role","setItem","e","console","removeItem","login","password","res","post","data","err","_err$response","_err$response$data","_err$response2","_err$response2$data","response","message","register","name","_err$response3","_err$response3$data","_err$response4","_err$response4$data","logout","isAuthenticated","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/TaskManagerPro/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport API from '../api';\r\nimport { jwtDecode } from 'jwt-decode'; // You might need to install jwt-decode: npm install jwt-decode\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const updateUserFromToken = useCallback((currentToken) => {\r\n    if (currentToken) {\r\n      try {\r\n        const decodedUser = jwtDecode(currentToken); // Assumes token contains user info like id, role\r\n        setUser({ id: decodedUser.id, email: decodedUser.email, role: decodedUser.role }); // Adjust based on your JWT payload\r\n        localStorage.setItem('token', currentToken);\r\n        setToken(currentToken);\r\n      } catch (e) {\r\n        console.error(\"Failed to decode token:\", e);\r\n        localStorage.removeItem('token');\r\n        setToken(null);\r\n        setUser(null);\r\n      }\r\n    } else {\r\n      localStorage.removeItem('token');\r\n      setToken(null);\r\n      setUser(null);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateUserFromToken(token);\r\n  }, [token, updateUserFromToken]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const res = await API.post('/auth/login', { email, password });\r\n      updateUserFromToken(res.data.token);\r\n    } catch (err) {\r\n      console.error(\"Login failed:\", err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Login failed. Please try again.');\r\n      // Keep token and user null/previous state on error\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      setError(null);\r\n      const res = await API.post('/auth/register', { name, email, password });\r\n      // Assuming successful registration also returns a token and logs the user in\r\n      updateUserFromToken(res.data.token);\r\n    } catch (err) {\r\n      console.error(\"Registration failed:\", err.response?.data?.message || err.message);\r\n      setError(err.response?.data?.message || 'Registration failed. Please try again.');\r\n      // Keep token and user null/previous state on error\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    updateUserFromToken(null);\r\n  };\r\n\r\n  const isAuthenticated = !!token && !!user;\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, user, isAuthenticated, login, logout, register, loading, error, setError }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}