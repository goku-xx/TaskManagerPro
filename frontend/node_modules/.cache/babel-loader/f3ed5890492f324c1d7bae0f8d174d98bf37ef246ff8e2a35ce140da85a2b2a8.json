{"ast":null,"code":"var _jsxFileName = \"D:\\\\TaskManagerPro\\\\frontend\\\\src\\\\components\\\\KanbanBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport API from '../api';\nimport { AuthContext } from '../context/AuthContext';\nimport TaskCard from './TaskCard';\nimport TaskForm from './TaskForm';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { Container, Grid, Paper, Typography, Button, Modal, Box, CircularProgress, Alert } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  boxShadow: 24,\n  p: 4,\n  borderRadius: 2\n};\nconst columnsFromBackend = {\n  todo: {\n    name: 'To Do',\n    items: []\n  },\n  inprogress: {\n    name: 'In Progress',\n    items: []\n  },\n  done: {\n    name: 'Done',\n    items: []\n  }\n};\nfunction KanbanBoard() {\n  _s();\n  const [columns, setColumns] = useState(columnsFromBackend);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useContext(AuthContext); // For potential user-specific tasks if API supports it\n\n  const [openModal, setOpenModal] = useState(false);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const fetchTasks = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const res = await API.get('/tasks'); // Assumes API returns all tasks for the user\n      const newColumns = JSON.parse(JSON.stringify(columnsFromBackend)); // Deep copy\n      newColumns.todo.items = [];\n      newColumns.inprogress.items = [];\n      newColumns.done.items = [];\n      res.data.forEach(task => {\n        if (newColumns[task.status]) {\n          newColumns[task.status].items.push(task);\n        } else {\n          // Handle tasks with unknown status, perhaps add to 'todo'\n          console.warn(`Task with unknown status: ${task.status}`, task);\n          newColumns.todo.items.push(task);\n        }\n      });\n      setColumns(newColumns);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Failed to fetch tasks:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Could not load tasks.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]); // Refetch if user changes, or remove if tasks are not user-specific on fetch\n\n  const handleOpenModal = (task = null) => {\n    setTaskToEdit(task);\n    setOpenModal(true);\n  };\n  const handleCloseModal = () => {\n    setOpenModal(false);\n    setTaskToEdit(null);\n  };\n  const handleSubmitTask = async taskData => {\n    setError(null);\n    try {\n      if (taskData._id) {\n        // Editing existing task\n        await API.put(`/tasks/${taskData._id}`, taskData);\n      } else {\n        // Adding new task\n        await API.post('/tasks', taskData);\n      }\n      fetchTasks(); // Refresh tasks\n      handleCloseModal();\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Failed to save task:\", err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Could not save task.\");\n      // Keep modal open on error if desired, or display error in modal\n    }\n  };\n  const handleDeleteTask = async taskId => {\n    setError(null);\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\n      try {\n        await API.delete(`/tasks/${taskId}`);\n        fetchTasks(); // Refresh tasks\n      } catch (err) {\n        var _err$response3, _err$response3$data;\n        console.error(\"Failed to delete task:\", err);\n        setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Could not delete task.\");\n      }\n    }\n  };\n  const onDragEnd = async result => {\n    if (!result.destination) return;\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return; // Item dropped in the same place\n    }\n    const taskToMove = columns[source.droppableId].items.find(task => task._id === draggableId);\n    if (!taskToMove) return;\n\n    // Optimistic UI Update\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = source.droppableId === destination.droppableId ? sourceItems : [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    });\n\n    // API Call to update task status\n    try {\n      await API.put(`/tasks/${draggableId}`, {\n        ...taskToMove,\n        status: destination.droppableId\n      });\n      // If API call is successful, the optimistic update is fine.\n      // Optionally, refetchTasks() for full consistency, but can cause a flicker.\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      console.error(\"Failed to update task status:\", err);\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || \"Could not update task status. Reverting.\");\n      // Revert UI on error\n      fetchTasks(); // Or more sophisticated revert logic\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        py: 4,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 48\n        }, this),\n        onClick: () => handleOpenModal(),\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: Object.entries(columns).map(([columnId, column]) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              p: 2,\n              backgroundColor: '#e9ecef',\n              minHeight: '70vh'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                textAlign: 'center',\n                mb: 2\n              },\n              children: [column.name, \" (\", column.items.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: columnId,\n              children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Box, {\n                ref: provided.innerRef,\n                ...provided.droppableProps,\n                sx: {\n                  background: snapshot.isDraggingOver ? 'lightblue' : 'transparent',\n                  padding: '4px',\n                  minHeight: '60vh' // Ensure droppable area is large enough\n                },\n                children: [column.items.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                  draggableId: item._id,\n                  index: index,\n                  children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Box, {\n                    ref: provided.innerRef,\n                    ...provided.draggableProps,\n                    ...provided.dragHandleProps,\n                    sx: {\n                      userSelect: 'none',\n                      mb: 1,\n                      ...provided.draggableProps.style\n                    },\n                    children: /*#__PURE__*/_jsxDEV(TaskCard, {\n                      task: item,\n                      onEdit: () => handleOpenModal(item),\n                      onDelete: handleDeleteTask\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 29\n                  }, this)\n                }, item._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 25\n                }, this)), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)\n            }, columnId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, columnId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openModal,\n      onClose: handleCloseModal,\n      \"aria-labelledby\": \"task-form-modal-title\",\n      \"aria-describedby\": \"task-form-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: modalStyle,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"task-form-modal-title\",\n          variant: \"h6\",\n          component: \"h2\",\n          gutterBottom: true,\n          children: taskToEdit ? 'Edit Task' : 'Add New Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n          onSubmit: handleSubmitTask,\n          taskToEdit: taskToEdit,\n          onCancel: handleCloseModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"vTfTUMgCT8UmqmnxSpWXTdKeXSs=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useEffect","useState","useContext","API","AuthContext","TaskCard","TaskForm","DragDropContext","Droppable","Draggable","Container","Grid","Paper","Typography","Button","Modal","Box","CircularProgress","Alert","AddIcon","jsxDEV","_jsxDEV","modalStyle","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","columnsFromBackend","todo","name","items","inprogress","done","KanbanBoard","_s","columns","setColumns","loading","setLoading","error","setError","user","openModal","setOpenModal","taskToEdit","setTaskToEdit","fetchTasks","res","get","newColumns","JSON","parse","stringify","data","forEach","task","status","push","console","warn","err","_err$response","_err$response$data","response","message","handleOpenModal","handleCloseModal","handleSubmitTask","taskData","_id","put","post","_err$response2","_err$response2$data","handleDeleteTask","taskId","window","confirm","delete","_err$response3","_err$response3$data","onDragEnd","result","destination","source","draggableId","droppableId","index","taskToMove","find","sourceColumn","destColumn","sourceItems","destItems","removed","splice","_err$response4","_err$response4$data","sx","py","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","mb","variant","component","startIcon","onClick","severity","container","spacing","Object","entries","map","columnId","column","item","xs","md","elevation","backgroundColor","minHeight","gutterBottom","length","provided","snapshot","ref","innerRef","droppableProps","background","isDraggingOver","padding","draggableProps","dragHandleProps","userSelect","style","onEdit","onDelete","placeholder","open","onClose","id","onSubmit","onCancel","_c","$RefreshReg$"],"sources":["D:/TaskManagerPro/frontend/src/components/KanbanBoard.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport API from '../api';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport TaskCard from './TaskCard';\r\nimport TaskForm from './TaskForm';\r\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\r\nimport { Container, Grid, Paper, Typography, Button, Modal, Box, CircularProgress, Alert } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst modalStyle = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  borderRadius: 2,\r\n};\r\n\r\nconst columnsFromBackend = {\r\n  todo: {\r\n    name: 'To Do',\r\n    items: [],\r\n  },\r\n  inprogress: {\r\n    name: 'In Progress',\r\n    items: [],\r\n  },\r\n  done: {\r\n    name: 'Done',\r\n    items: [],\r\n  },\r\n};\r\n\r\nfunction KanbanBoard() {\r\n  const [columns, setColumns] = useState(columnsFromBackend);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const { user } = useContext(AuthContext); // For potential user-specific tasks if API supports it\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [taskToEdit, setTaskToEdit] = useState(null);\r\n\r\n  const fetchTasks = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const res = await API.get('/tasks'); // Assumes API returns all tasks for the user\r\n      const newColumns = JSON.parse(JSON.stringify(columnsFromBackend)); // Deep copy\r\n      newColumns.todo.items = [];\r\n      newColumns.inprogress.items = [];\r\n      newColumns.done.items = [];\r\n\r\n      res.data.forEach(task => {\r\n        if (newColumns[task.status]) {\r\n          newColumns[task.status].items.push(task);\r\n        } else {\r\n          // Handle tasks with unknown status, perhaps add to 'todo'\r\n          console.warn(`Task with unknown status: ${task.status}`, task);\r\n          newColumns.todo.items.push(task); \r\n        }\r\n      });\r\n      setColumns(newColumns);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch tasks:\", err);\r\n      setError(err.response?.data?.message || \"Could not load tasks.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]); // Refetch if user changes, or remove if tasks are not user-specific on fetch\r\n\r\n  const handleOpenModal = (task = null) => {\r\n    setTaskToEdit(task);\r\n    setOpenModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenModal(false);\r\n    setTaskToEdit(null);\r\n  };\r\n\r\n  const handleSubmitTask = async (taskData) => {\r\n    setError(null);\r\n    try {\r\n      if (taskData._id) { // Editing existing task\r\n        await API.put(`/tasks/${taskData._id}`, taskData);\r\n      } else { // Adding new task\r\n        await API.post('/tasks', taskData);\r\n      }\r\n      fetchTasks(); // Refresh tasks\r\n      handleCloseModal();\r\n    } catch (err) {\r\n      console.error(\"Failed to save task:\", err);\r\n      setError(err.response?.data?.message || \"Could not save task.\");\r\n      // Keep modal open on error if desired, or display error in modal\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    setError(null);\r\n    if (window.confirm(\"Are you sure you want to delete this task?\")) {\r\n      try {\r\n        await API.delete(`/tasks/${taskId}`);\r\n        fetchTasks(); // Refresh tasks\r\n      } catch (err) {\r\n        console.error(\"Failed to delete task:\", err);\r\n        setError(err.response?.data?.message || \"Could not delete task.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const onDragEnd = async (result) => {\r\n    if (!result.destination) return;\r\n    const { source, destination, draggableId } = result;\r\n\r\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\r\n      return; // Item dropped in the same place\r\n    }\r\n    \r\n    const taskToMove = columns[source.droppableId].items.find(task => task._id === draggableId);\r\n    if (!taskToMove) return;\r\n\r\n    // Optimistic UI Update\r\n    const sourceColumn = columns[source.droppableId];\r\n    const destColumn = columns[destination.droppableId];\r\n    const sourceItems = [...sourceColumn.items];\r\n    const destItems = (source.droppableId === destination.droppableId) ? sourceItems : [...destColumn.items];\r\n    \r\n    const [removed] = sourceItems.splice(source.index, 1);\r\n    destItems.splice(destination.index, 0, removed);\r\n\r\n    setColumns({\r\n      ...columns,\r\n      [source.droppableId]: {\r\n        ...sourceColumn,\r\n        items: sourceItems,\r\n      },\r\n      [destination.droppableId]: {\r\n        ...destColumn,\r\n        items: destItems,\r\n      },\r\n    });\r\n\r\n    // API Call to update task status\r\n    try {\r\n      await API.put(`/tasks/${draggableId}`, { ...taskToMove, status: destination.droppableId });\r\n      // If API call is successful, the optimistic update is fine.\r\n      // Optionally, refetchTasks() for full consistency, but can cause a flicker.\r\n    } catch (err) {\r\n      console.error(\"Failed to update task status:\", err);\r\n      setError(err.response?.data?.message || \"Could not update task status. Reverting.\");\r\n      // Revert UI on error\r\n      fetchTasks(); // Or more sophisticated revert logic\r\n    }\r\n  };\r\n  \r\n  if (loading) {\r\n    return (\r\n      <Container sx={{ py: 4, textAlign: 'center' }}>\r\n        <CircularProgress />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container sx={{ py: 4 }}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          Kanban Board\r\n        </Typography>\r\n        <Button variant=\"contained\" startIcon={<AddIcon />} onClick={() => handleOpenModal()}>\r\n          Add Task\r\n        </Button>\r\n      </Box>\r\n\r\n      {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\r\n\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Grid container spacing={3}>\r\n          {Object.entries(columns).map(([columnId, column]) => (\r\n            <Grid item xs={12} md={4} key={columnId}>\r\n              <Paper elevation={2} sx={{ p: 2, backgroundColor: '#e9ecef', minHeight: '70vh' }}>\r\n                <Typography variant=\"h6\" gutterBottom sx={{ textAlign: 'center', mb: 2 }}>\r\n                  {column.name} ({column.items.length})\r\n                </Typography>\r\n                <Droppable droppableId={columnId} key={columnId}>\r\n                  {(provided, snapshot) => (\r\n                    <Box\r\n                      ref={provided.innerRef}\r\n                      {...provided.droppableProps}\r\n                      sx={{\r\n                        background: snapshot.isDraggingOver ? 'lightblue' : 'transparent',\r\n                        padding: '4px',\r\n                        minHeight: '60vh', // Ensure droppable area is large enough\r\n                      }}\r\n                    >\r\n                      {column.items.map((item, index) => (\r\n                        <Draggable key={item._id} draggableId={item._id} index={index}>\r\n                          {(provided, snapshot) => (\r\n                            <Box\r\n                              ref={provided.innerRef}\r\n                              {...provided.draggableProps}\r\n                              {...provided.dragHandleProps}\r\n                              sx={{\r\n                                userSelect: 'none',\r\n                                mb: 1,\r\n                                ...provided.draggableProps.style,\r\n                              }}\r\n                            >\r\n                              <TaskCard\r\n                                task={item}\r\n                                onEdit={() => handleOpenModal(item)}\r\n                                onDelete={handleDeleteTask}\r\n                              />\r\n                            </Box>\r\n                          )}\r\n                        </Draggable>\r\n                      ))}\r\n                      {provided.placeholder}\r\n                    </Box>\r\n                  )}\r\n                </Droppable>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </DragDropContext>\r\n\r\n      <Modal\r\n        open={openModal}\r\n        onClose={handleCloseModal}\r\n        aria-labelledby=\"task-form-modal-title\"\r\n        aria-describedby=\"task-form-modal-description\"\r\n      >\r\n        <Box sx={modalStyle}>\r\n          <Typography id=\"task-form-modal-title\" variant=\"h6\" component=\"h2\" gutterBottom>\r\n            {taskToEdit ? 'Edit Task' : 'Add New Task'}\r\n          </Typography>\r\n          <TaskForm\r\n            onSubmit={handleSubmitTask}\r\n            taskToEdit={taskToEdit}\r\n            onCancel={handleCloseModal}\r\n          />\r\n        </Box>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default KanbanBoard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,GAAG,MAAM,QAAQ;AACxB,SAASC,WAAW,QAAQ,wBAAwB;AACpD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,mBAAmB;AACzE,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,UAAU,EAAEC,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAEC,gBAAgB,EAAEC,KAAK,QAAQ,eAAe;AAC/G,OAAOC,OAAO,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAG;EACjBC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAE,uBAAuB;EAClCC,KAAK,EAAE,GAAG;EACVC,OAAO,EAAE,kBAAkB;EAC3BC,SAAS,EAAE,EAAE;EACbC,CAAC,EAAE,CAAC;EACJC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,kBAAkB,GAAG;EACzBC,IAAI,EAAE;IACJC,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE;EACT,CAAC;EACDC,UAAU,EAAE;IACVF,IAAI,EAAE,aAAa;IACnBC,KAAK,EAAE;EACT,CAAC;EACDE,IAAI,EAAE;IACJH,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACT;AACF,CAAC;AAED,SAASG,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxC,QAAQ,CAAC+B,kBAAkB,CAAC;EAC1D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2C,KAAK,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM;IAAE6C;EAAK,CAAC,GAAG5C,UAAU,CAACE,WAAW,CAAC,CAAC,CAAC;;EAE1C,MAAM,CAAC2C,SAAS,EAAEC,YAAY,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgD,UAAU,EAAEC,aAAa,CAAC,GAAGjD,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMkD,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7BR,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMO,GAAG,GAAG,MAAMjD,GAAG,CAACkD,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;MACrC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACzB,kBAAkB,CAAC,CAAC,CAAC,CAAC;MACnEsB,UAAU,CAACrB,IAAI,CAACE,KAAK,GAAG,EAAE;MAC1BmB,UAAU,CAAClB,UAAU,CAACD,KAAK,GAAG,EAAE;MAChCmB,UAAU,CAACjB,IAAI,CAACF,KAAK,GAAG,EAAE;MAE1BiB,GAAG,CAACM,IAAI,CAACC,OAAO,CAACC,IAAI,IAAI;QACvB,IAAIN,UAAU,CAACM,IAAI,CAACC,MAAM,CAAC,EAAE;UAC3BP,UAAU,CAACM,IAAI,CAACC,MAAM,CAAC,CAAC1B,KAAK,CAAC2B,IAAI,CAACF,IAAI,CAAC;QAC1C,CAAC,MAAM;UACL;UACAG,OAAO,CAACC,IAAI,CAAC,6BAA6BJ,IAAI,CAACC,MAAM,EAAE,EAAED,IAAI,CAAC;UAC9DN,UAAU,CAACrB,IAAI,CAACE,KAAK,CAAC2B,IAAI,CAACF,IAAI,CAAC;QAClC;MACF,CAAC,CAAC;MACFnB,UAAU,CAACa,UAAU,CAAC;IACxB,CAAC,CAAC,OAAOW,GAAG,EAAE;MAAA,IAAAC,aAAA,EAAAC,kBAAA;MACZJ,OAAO,CAACnB,KAAK,CAAC,wBAAwB,EAAEqB,GAAG,CAAC;MAC5CpB,QAAQ,CAAC,EAAAqB,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcR,IAAI,cAAAS,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,uBAAuB,CAAC;IAClE,CAAC,SAAS;MACR1B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED3C,SAAS,CAAC,MAAM;IACdmD,UAAU,CAAC,CAAC;IACd;EACA,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEZ,MAAMwB,eAAe,GAAGA,CAACV,IAAI,GAAG,IAAI,KAAK;IACvCV,aAAa,CAACU,IAAI,CAAC;IACnBZ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMuB,gBAAgB,GAAGA,CAAA,KAAM;IAC7BvB,YAAY,CAAC,KAAK,CAAC;IACnBE,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMsB,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IAC3C5B,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,IAAI4B,QAAQ,CAACC,GAAG,EAAE;QAAE;QAClB,MAAMvE,GAAG,CAACwE,GAAG,CAAC,UAAUF,QAAQ,CAACC,GAAG,EAAE,EAAED,QAAQ,CAAC;MACnD,CAAC,MAAM;QAAE;QACP,MAAMtE,GAAG,CAACyE,IAAI,CAAC,QAAQ,EAAEH,QAAQ,CAAC;MACpC;MACAtB,UAAU,CAAC,CAAC,CAAC,CAAC;MACdoB,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC,OAAON,GAAG,EAAE;MAAA,IAAAY,cAAA,EAAAC,mBAAA;MACZf,OAAO,CAACnB,KAAK,CAAC,sBAAsB,EAAEqB,GAAG,CAAC;MAC1CpB,QAAQ,CAAC,EAAAgC,cAAA,GAAAZ,GAAG,CAACG,QAAQ,cAAAS,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAcnB,IAAI,cAAAoB,mBAAA,uBAAlBA,mBAAA,CAAoBT,OAAO,KAAI,sBAAsB,CAAC;MAC/D;IACF;EACF,CAAC;EAED,MAAMU,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzCnC,QAAQ,CAAC,IAAI,CAAC;IACd,IAAIoC,MAAM,CAACC,OAAO,CAAC,4CAA4C,CAAC,EAAE;MAChE,IAAI;QACF,MAAM/E,GAAG,CAACgF,MAAM,CAAC,UAAUH,MAAM,EAAE,CAAC;QACpC7B,UAAU,CAAC,CAAC,CAAC,CAAC;MAChB,CAAC,CAAC,OAAOc,GAAG,EAAE;QAAA,IAAAmB,cAAA,EAAAC,mBAAA;QACZtB,OAAO,CAACnB,KAAK,CAAC,wBAAwB,EAAEqB,GAAG,CAAC;QAC5CpB,QAAQ,CAAC,EAAAuC,cAAA,GAAAnB,GAAG,CAACG,QAAQ,cAAAgB,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc1B,IAAI,cAAA2B,mBAAA,uBAAlBA,mBAAA,CAAoBhB,OAAO,KAAI,wBAAwB,CAAC;MACnE;IACF;EACF,CAAC;EAED,MAAMiB,SAAS,GAAG,MAAOC,MAAM,IAAK;IAClC,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;IACzB,MAAM;MAAEC,MAAM;MAAED,WAAW;MAAEE;IAAY,CAAC,GAAGH,MAAM;IAEnD,IAAIE,MAAM,CAACE,WAAW,KAAKH,WAAW,CAACG,WAAW,IAAIF,MAAM,CAACG,KAAK,KAAKJ,WAAW,CAACI,KAAK,EAAE;MACxF,OAAO,CAAC;IACV;IAEA,MAAMC,UAAU,GAAGrD,OAAO,CAACiD,MAAM,CAACE,WAAW,CAAC,CAACxD,KAAK,CAAC2D,IAAI,CAAClC,IAAI,IAAIA,IAAI,CAACc,GAAG,KAAKgB,WAAW,CAAC;IAC3F,IAAI,CAACG,UAAU,EAAE;;IAEjB;IACA,MAAME,YAAY,GAAGvD,OAAO,CAACiD,MAAM,CAACE,WAAW,CAAC;IAChD,MAAMK,UAAU,GAAGxD,OAAO,CAACgD,WAAW,CAACG,WAAW,CAAC;IACnD,MAAMM,WAAW,GAAG,CAAC,GAAGF,YAAY,CAAC5D,KAAK,CAAC;IAC3C,MAAM+D,SAAS,GAAIT,MAAM,CAACE,WAAW,KAAKH,WAAW,CAACG,WAAW,GAAIM,WAAW,GAAG,CAAC,GAAGD,UAAU,CAAC7D,KAAK,CAAC;IAExG,MAAM,CAACgE,OAAO,CAAC,GAAGF,WAAW,CAACG,MAAM,CAACX,MAAM,CAACG,KAAK,EAAE,CAAC,CAAC;IACrDM,SAAS,CAACE,MAAM,CAACZ,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEO,OAAO,CAAC;IAE/C1D,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAACiD,MAAM,CAACE,WAAW,GAAG;QACpB,GAAGI,YAAY;QACf5D,KAAK,EAAE8D;MACT,CAAC;MACD,CAACT,WAAW,CAACG,WAAW,GAAG;QACzB,GAAGK,UAAU;QACb7D,KAAK,EAAE+D;MACT;IACF,CAAC,CAAC;;IAEF;IACA,IAAI;MACF,MAAM/F,GAAG,CAACwE,GAAG,CAAC,UAAUe,WAAW,EAAE,EAAE;QAAE,GAAGG,UAAU;QAAEhC,MAAM,EAAE2B,WAAW,CAACG;MAAY,CAAC,CAAC;MAC1F;MACA;IACF,CAAC,CAAC,OAAO1B,GAAG,EAAE;MAAA,IAAAoC,cAAA,EAAAC,mBAAA;MACZvC,OAAO,CAACnB,KAAK,CAAC,+BAA+B,EAAEqB,GAAG,CAAC;MACnDpB,QAAQ,CAAC,EAAAwD,cAAA,GAAApC,GAAG,CAACG,QAAQ,cAAAiC,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc3C,IAAI,cAAA4C,mBAAA,uBAAlBA,mBAAA,CAAoBjC,OAAO,KAAI,0CAA0C,CAAC;MACnF;MACAlB,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB;EACF,CAAC;EAED,IAAIT,OAAO,EAAE;IACX,oBACErB,OAAA,CAACX,SAAS;MAAC6F,EAAE,EAAE;QAAEC,EAAE,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,eAC5CrF,OAAA,CAACJ,gBAAgB;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAEhB;EAEA,oBACEzF,OAAA,CAACX,SAAS;IAAC6F,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAE,QAAA,gBACvBrF,OAAA,CAACL,GAAG;MAACuF,EAAE,EAAE;QAAEQ,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAR,QAAA,gBACzFrF,OAAA,CAACR,UAAU;QAACsG,OAAO,EAAC,IAAI;QAACC,SAAS,EAAC,IAAI;QAAAV,QAAA,EAAC;MAExC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbzF,OAAA,CAACP,MAAM;QAACqG,OAAO,EAAC,WAAW;QAACE,SAAS,eAAEhG,OAAA,CAACF,OAAO;UAAAwF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAACQ,OAAO,EAAEA,CAAA,KAAMhD,eAAe,CAAC,CAAE;QAAAoC,QAAA,EAAC;MAEtF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELlE,KAAK,iBAAIvB,OAAA,CAACH,KAAK;MAACqG,QAAQ,EAAC,OAAO;MAAChB,EAAE,EAAE;QAAEW,EAAE,EAAE;MAAE,CAAE;MAAAR,QAAA,EAAE9D;IAAK;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhEzF,OAAA,CAACd,eAAe;MAAC+E,SAAS,EAAEA,SAAU;MAAAoB,QAAA,eACpCrF,OAAA,CAACV,IAAI;QAAC6G,SAAS;QAACC,OAAO,EAAE,CAAE;QAAAf,QAAA,EACxBgB,MAAM,CAACC,OAAO,CAACnF,OAAO,CAAC,CAACoF,GAAG,CAAC,CAAC,CAACC,QAAQ,EAAEC,MAAM,CAAC,kBAC9CzG,OAAA,CAACV,IAAI;UAACoH,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAvB,QAAA,eACvBrF,OAAA,CAACT,KAAK;YAACsH,SAAS,EAAE,CAAE;YAAC3B,EAAE,EAAE;cAAEzE,CAAC,EAAE,CAAC;cAAEqG,eAAe,EAAE,SAAS;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAA1B,QAAA,gBAC/ErF,OAAA,CAACR,UAAU;cAACsG,OAAO,EAAC,IAAI;cAACkB,YAAY;cAAC9B,EAAE,EAAE;gBAAEE,SAAS,EAAE,QAAQ;gBAAES,EAAE,EAAE;cAAE,CAAE;cAAAR,QAAA,GACtEoB,MAAM,CAAC5F,IAAI,EAAC,IAAE,EAAC4F,MAAM,CAAC3F,KAAK,CAACmG,MAAM,EAAC,GACtC;YAAA;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACbzF,OAAA,CAACb,SAAS;cAACmF,WAAW,EAAEkC,QAAS;cAAAnB,QAAA,EAC9BA,CAAC6B,QAAQ,EAAEC,QAAQ,kBAClBnH,OAAA,CAACL,GAAG;gBACFyH,GAAG,EAAEF,QAAQ,CAACG,QAAS;gBAAA,GACnBH,QAAQ,CAACI,cAAc;gBAC3BpC,EAAE,EAAE;kBACFqC,UAAU,EAAEJ,QAAQ,CAACK,cAAc,GAAG,WAAW,GAAG,aAAa;kBACjEC,OAAO,EAAE,KAAK;kBACdV,SAAS,EAAE,MAAM,CAAE;gBACrB,CAAE;gBAAA1B,QAAA,GAEDoB,MAAM,CAAC3F,KAAK,CAACyF,GAAG,CAAC,CAACG,IAAI,EAAEnC,KAAK,kBAC5BvE,OAAA,CAACZ,SAAS;kBAAgBiF,WAAW,EAAEqC,IAAI,CAACrD,GAAI;kBAACkB,KAAK,EAAEA,KAAM;kBAAAc,QAAA,EAC3DA,CAAC6B,QAAQ,EAAEC,QAAQ,kBAClBnH,OAAA,CAACL,GAAG;oBACFyH,GAAG,EAAEF,QAAQ,CAACG,QAAS;oBAAA,GACnBH,QAAQ,CAACQ,cAAc;oBAAA,GACvBR,QAAQ,CAACS,eAAe;oBAC5BzC,EAAE,EAAE;sBACF0C,UAAU,EAAE,MAAM;sBAClB/B,EAAE,EAAE,CAAC;sBACL,GAAGqB,QAAQ,CAACQ,cAAc,CAACG;oBAC7B,CAAE;oBAAAxC,QAAA,eAEFrF,OAAA,CAAChB,QAAQ;sBACPuD,IAAI,EAAEmE,IAAK;sBACXoB,MAAM,EAAEA,CAAA,KAAM7E,eAAe,CAACyD,IAAI,CAAE;sBACpCqB,QAAQ,EAAErE;oBAAiB;sBAAA4B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC5B;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC;gBACN,GAlBaiB,IAAI,CAACrD,GAAG;kBAAAiC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAmBb,CACZ,CAAC,EACDyB,QAAQ,CAACc,WAAW;cAAA;gBAAA1C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB;YACN,GAnCoCe,QAAQ;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoCpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC,GA1CqBe,QAAQ;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2CjC,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,eAElBzF,OAAA,CAACN,KAAK;MACJuI,IAAI,EAAEvG,SAAU;MAChBwG,OAAO,EAAEhF,gBAAiB;MAC1B,mBAAgB,uBAAuB;MACvC,oBAAiB,6BAA6B;MAAAmC,QAAA,eAE9CrF,OAAA,CAACL,GAAG;QAACuF,EAAE,EAAEjF,UAAW;QAAAoF,QAAA,gBAClBrF,OAAA,CAACR,UAAU;UAAC2I,EAAE,EAAC,uBAAuB;UAACrC,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAACiB,YAAY;UAAA3B,QAAA,EAC5EzD,UAAU,GAAG,WAAW,GAAG;QAAc;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,eACbzF,OAAA,CAACf,QAAQ;UACPmJ,QAAQ,EAAEjF,gBAAiB;UAC3BvB,UAAU,EAAEA,UAAW;UACvByG,QAAQ,EAAEnF;QAAiB;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB;AAACvE,EAAA,CA1NQD,WAAW;AAAAqH,EAAA,GAAXrH,WAAW;AA4NpB,eAAeA,WAAW;AAAC,IAAAqH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}